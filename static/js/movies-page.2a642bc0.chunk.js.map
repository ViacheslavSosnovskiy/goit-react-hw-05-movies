{"version":3,"sources":["services/apiService.js","components/movieList/MovieList.js","components/loadMoreButton/LoadMoreButton.js","components/form/Form.js","pages/moviesPage/MoviesPage.js"],"names":["KEY","BASE_URL","TRENDING","SEARCH","getPopularMovies","page","a","axios","get","data","console","error","getMovieSearch","movie","getMovieById","movie_id","fetchCast","fetchReviews","MovieList","movies","url","location","log","map","id","title","poster_path","release_date","vote_average","to","pathname","state","from","src","alt","slice","LoadMoreButton","onLoadMore","type","onClick","Form","searchHandler","useState","query","setQuery","resetQuery","className","onSubmit","e","preventDefault","trim","toast","value","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","MoviesPage","history","useHistory","useLocation","useRouteMatch","URLSearchParams","search","userQuery","setUserQuery","setMovies","setPage","status","setStatus","useEffect","getSearchQuery","apiService","then","response","results","prevMovies","prevPage","scroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","showLoadMore","length","color","height","width","timeout","newQuery","push"],"mappings":"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","file":"static/js/movies-page.2a642bc0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false\r\nconst KEY = \"42d598709b0517212023a74116f4ecb9\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst TRENDING = \"/trending/movie/week\";\r\nconst SEARCH = \"/search/movie\";\r\n\r\n// ${BASE_URL}trending/all/day?api_key=<<api_key>>&page\r\nexport async function getPopularMovies(page) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}${TRENDING}?api_key=${KEY}&page=${page}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// ${BASE_URL}search/movie?api_key=${KEY}&page=1\r\nexport async function getMovieSearch(movie, page) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}${SEARCH}?api_key=${KEY}&page=${page}&query=${movie}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n// ${BASE_URL}movie/{movie_id}?api_key=${KEY}\r\nexport async function getMovieById(movie_id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}movie/${movie_id}?api_key=${KEY}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// ${BASE_URL}movie/{movie_id}/credits?api_key=${KEY}\r\nexport async function fetchCast(movie_id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// ${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&page=1\r\nexport async function fetchReviews(movie_id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&page=1`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nexport default function MovieList({ movies, url, location }) {\r\n  console.log(movies);\r\n  return (\r\n    <>\r\n      <ul>\r\n        {movies.map(\r\n          ({ id, title, poster_path, release_date, vote_average }) => (\r\n            <li key={id}>\r\n              <NavLink\r\n                to={{\r\n                  pathname: `${url}/${id}`,\r\n                  state: { from: location },\r\n                }}\r\n              >\r\n                <div>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w200` + poster_path}\r\n                    alt={title}\r\n                  />\r\n                  <div>\r\n                    <h2>{title}</h2>\r\n                    {vote_average && <p>⭐️{vote_average}</p>}\r\n                    {release_date && <p>{release_date.slice(0, 4)}</p>}\r\n                  </div>\r\n                </div>\r\n              </NavLink>\r\n            </li>\r\n          )\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","export default function LoadMoreButton({ onLoadMore }) {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={onLoadMore}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Form({ searchHandler }) {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const onInputChange = (e) => {\r\n    setQuery(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (query.trim() === \"\") {\r\n      return toast.error(\"Введите корректно!\");\r\n    }\r\n\r\n    searchHandler(query);\r\n    resetQuery();\r\n  };\r\n\r\n  const resetQuery = () => {\r\n    setQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"SearchForm\" onSubmit={onSubmitForm}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          value={query}\r\n          onChange={onInputChange}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport * as apiService from \"../../services/apiService\";\r\nimport MovieList from \"../../components/movieList/MovieList\";\r\nimport Form from \"../../components/form/Form\";\r\nimport LoadMoreButton from \"../../components/loadMoreButton/LoadMoreButton\";\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default function MoviesPage() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { url } = useRouteMatch();\r\n\r\n  const query = new URLSearchParams(location.search).get(\"query\");\r\n\r\n  const [userQuery, setUserQuery] = useState(query ?? \"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [status, setStatus] = useState(\"idle\");\r\n\r\n  useEffect(() => {\r\n    if (!userQuery) {\r\n      return;\r\n    }\r\n\r\n    getSearchQuery();\r\n  }, [userQuery]);\r\n\r\n  const getSearchQuery = () => {\r\n    // if (userQuery.trim() === \"\") {  ==== ???????????????????????\r\n    //   return;\r\n    // }\r\n    setStatus(\"pending\");\r\n\r\n    apiService.getMovieSearch(userQuery, page).then((response) => {\r\n      const data = response.results;\r\n      setMovies((prevMovies) => [...prevMovies, ...data]);\r\n    });\r\n    setPage((prevPage) => prevPage + 1);\r\n    setStatus(\"resolved\");\r\n\r\n    if (page !== 1) {\r\n      scroll();\r\n    }\r\n  };\r\n\r\n  const handleQuery = (newQuery) => {\r\n    if (newQuery === userQuery) {\r\n      return;\r\n    }\r\n    setUserQuery(newQuery);\r\n    setMovies([]);\r\n    setPage(1);\r\n\r\n    history.push({\r\n      ...location,\r\n      search: `query=${newQuery}`,\r\n    });\r\n  };\r\n\r\n  const scroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    getSearchQuery();\r\n  };\r\n\r\n  const showLoadMore = movies.length > 0 && movies.length >= 19;\r\n  return (\r\n    <>\r\n      {status === \"pending\" && (\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n      <Form searchHandler={handleQuery} />\r\n      <MovieList movies={movies} url={url} location={location} />\r\n      {showLoadMore && <LoadMoreButton onLoadMore={onLoadMore} />}\r\n      {/* <ToastContainer /> */}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}