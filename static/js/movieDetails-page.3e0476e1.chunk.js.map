{"version":3,"sources":["services/apiService.js","components/movieCard/MovieCard.js","pages/movieDetailsPage/MovieDetailsPage.js"],"names":["KEY","BASE_URL","TRENDING","SEARCH","getPopularMovies","page","a","axios","get","data","console","error","getMovieSearch","movie","getMovieById","movie_id","fetchCast","fetchReviews","MovieCard","url","useRouteMatch","location","useLocation","history","useHistory","title","release_date","vote_average","poster_path","overview","imageUrl","tupe","onClick","push","state","from","src","alt","to","pathname","Cast","lazy","Reviews","MovieDetailsPage","useState","setMovie","status","setStatus","match","path","movieId","params","log","useEffect","getMovieInfo","apiService","then","response","type","color","height","width","timeout","fallback","exact"],"mappings":"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","file":"static/js/movieDetails-page.3e0476e1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false\r\nconst KEY = \"42d598709b0517212023a74116f4ecb9\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst TRENDING = \"/trending/movie/week\";\r\nconst SEARCH = \"/search/movie\";\r\n\r\n// ${BASE_URL}trending/all/day?api_key=<<api_key>>&page\r\nexport async function getPopularMovies(page) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}${TRENDING}?api_key=${KEY}&page=${page}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// ${BASE_URL}search/movie?api_key=${KEY}&page=1\r\nexport async function getMovieSearch(movie, page) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}${SEARCH}?api_key=${KEY}&page=${page}&query=${movie}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n// ${BASE_URL}movie/{movie_id}?api_key=${KEY}\r\nexport async function getMovieById(movie_id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}movie/${movie_id}?api_key=${KEY}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// ${BASE_URL}movie/{movie_id}/credits?api_key=${KEY}\r\nexport async function fetchCast(movie_id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// ${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&page=1\r\nexport async function fetchReviews(movie_id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&page=1`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import {\r\n  useLocation,\r\n  useRouteMatch,\r\n  useHistory,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\n\r\nexport default function MovieCard({ movie }) {\r\n  const { url } = useRouteMatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const { title, release_date, vote_average, poster_path, overview } = movie;\r\n\r\n  const buttonBack = () => {\r\n    history.push(location?.state?.from ?? \"/movies\");\r\n  };\r\n\r\n  const imageUrl = \"https://image.tmdb.org/t/p/w200\" + poster_path;\r\n  return (\r\n    <>\r\n      <div>\r\n        <button tupe=\"button\" onClick={buttonBack}>\r\n          Back\r\n        </button>\r\n\r\n        <div>\r\n          <img src={imageUrl} alt={title} />\r\n        </div>\r\n\r\n        <div>\r\n          {title && <h2>{title}</h2>}\r\n          {release_date && <p>{release_date}</p>}\r\n          {vote_average && <p>{vote_average}</p>}\r\n          {overview && <p>{overview}</p>}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <NavLink\r\n          to={{\r\n            pathname: `${url}/cast`,\r\n            state: { from: location.state ? location.state.from : \"/\" },\r\n          }}\r\n        >\r\n          Cast\r\n        </NavLink>\r\n        <NavLink\r\n          to={{\r\n            pathname: `${url}/reviews`,\r\n            state: { from: location.state ? location.state.from : \"/\" },\r\n          }}\r\n        >\r\n          Reviews\r\n        </NavLink>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { useRouteMatch, Router } from \"react-router-dom\";\r\nimport * as apiService from \"../../services/apiService\";\r\nimport MovieCard from \"../../components/movieCard/MovieCard\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n// lazy\r\nconst Cast = lazy(() =>\r\n  import(\"./cast/Cast\" /* webpackChunkName: \"cast-page\" */)\r\n);\r\n\r\nconst Reviews = lazy(() =>\r\n  import(\"./reviews/Reviews\" /* webpackChunkName: \"reviews-page\" */)\r\n);\r\n\r\nexport default function MovieDetailsPage() {\r\n  const [movie, setMovie] = useState(null);\r\n  const [status, setStatus] = useState(\"idle\");\r\n\r\n  const match = useRouteMatch();\r\n  const { path } = useRouteMatch();\r\n  const { movieId } = match.params;\r\n  console.log(\"match.params\", match.params);\r\n\r\n  useEffect(() => {\r\n    getMovieInfo();\r\n  }, []);\r\n\r\n  const getMovieInfo = () => {\r\n    setStatus(\"pending\");\r\n    apiService.getMovieById(movieId).then((response) => {\r\n      setMovie(response);\r\n    });\r\n    setStatus(\"resolved\");\r\n  };\r\n\r\n  // const { url } = useRouteMatch();\r\n  // const location = useLocation();\r\n\r\n  // const { slug } = useParams();\r\n  // const movieId = slug.match(/[a-z0-9]+$/)[0];\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <NavLink\r\n          to={{\r\n            pathname: url + \"/cast\",\r\n            state: { ...location.state, id: movieId },\r\n          }}\r\n        >\r\n          Cast\r\n        </NavLink>\r\n        <NavLink\r\n          to={{\r\n            pathname: url + \"/reviews\",\r\n            state: { ...location.state, id: movieId },\r\n          }}\r\n        >\r\n          Reviews\r\n        </NavLink>\r\n      </div> */}\r\n      {status === \"pending\" && (\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n      {movie && <MovieCard movie={movie} />}\r\n      <hr />\r\n      <Suspense\r\n        fallback={\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000}\r\n          />\r\n        }\r\n      >\r\n        <Router exact path={`${path}/cast`}>\r\n          {movie && <Cast />}\r\n        </Router>\r\n        <Router exact path={`${path}/reviews`}>\r\n          {movie && <Reviews />}\r\n        </Router>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}